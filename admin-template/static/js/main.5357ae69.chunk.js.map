{"version":3,"sources":["components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","api/apiSlice.js","components/heroesList/HeroesList.js","components/heroesFilters/filterSlice.js","hooks/http.hook.js","store/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","index.js"],"names":["HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","type","aria-label","onClick","Spinner","role","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getHeroes","query","providesTags","createHero","mutation","hero","url","method","body","invalidatesTags","deleteHero","id","useGetHeroesQuery","useCreateHeroMutation","useDeleteHeroMutation","HeroesList","data","heroes","isLoading","isError","selectedFilter","useSelector","state","filters","filteredHeroes","useMemo","slice","filter","item","useCallback","arr","elements","length","map","props","filterAdapter","createEntityAdapter","initialState","getInitialState","filtersLoadingStatus","fetchFilters","createAsyncThunk","request","headers","fetch","response","ok","Error","status","json","filterSlice","createSlice","reducers","filterSelect","action","payload","extraReducers","addCase","pending","fulfilled","setAll","rejected","addDefaultCase","actions","reducer","selectAll","getSelectors","stringMiddleware","next","store","configureStore","middleware","getDefaultMiddleware","concat","devTools","process","HeroesAddForm","useState","heroName","setHeroName","heroDescr","setHeroDescr","heroElem","setHeroElem","getState","onSubmit","e","preventDefault","heroData","uuid","unwrap","htmlFor","required","placeholder","value","onChange","target","i","renderFilters","HeroesFilters","dispatch","useDispatch","useEffect","itemsRef","useRef","renderBtn","ref","el","current","forEach","elem","classList","remove","add","content","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5357ae69.chunk.js","sourcesContent":["const HeroesListItem = ({name, description, element, onDelete}) => {\n    let elementClassName;\n\n    switch (element) {\n        case 'fire':\n            elementClassName = 'bg-danger bg-gradient';\n            break;\n        case 'water':\n            elementClassName = 'bg-primary bg-gradient';\n            break;\n        case 'wind':\n            elementClassName = 'bg-success bg-gradient';\n            break;\n        case 'earth':\n            elementClassName = 'bg-secondary bg-gradient';\n            break;\n        default:\n            elementClassName = 'bg-warning bg-gradient';\n    }\n\n    return (\n        <li \n            className={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}>\n            <img src=\"http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg\" \n                 className=\"img-fluid w-25 d-inline\" \n                 alt=\"unknown hero\" \n                 style={{'objectFit': 'cover'}}/>\n            <div className=\"card-body\">\n                \n                <h3 className=\"card-title\">{name}</h3>\n                <p className=\"card-text\">{description}</p>\n            </div>\n            <span className=\"position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light\">\n                <button type=\"button\" className=\"btn-close btn-close\" aria-label=\"Close\" onClick={onDelete}></button>\n            </span>\n        </li>\n    )\n}\n\nexport default HeroesListItem;","const Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react';\r\n\r\nexport const apiSlice = createApi({\r\n    reducerPath: 'api',\r\n    baseQuery: fetchBaseQuery({baseUrl: 'http://localhost:3001'}),\r\n    tagTypes: ['Heroes'],\r\n    endpoints: builder => ({\r\n        getHeroes: builder.query({\r\n            query: () => '/heroes',\r\n            providesTags: ['Heroes']\r\n        }),\r\n        createHero: builder.mutation({\r\n            query: hero => ({\r\n                url: '/heroes',\r\n                method: 'POST',\r\n                body: hero\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n        }),\r\n        deleteHero: builder.mutation({\r\n            query: id => ({\r\n                url: `/heroes/${id}`,\r\n                method: 'DELETE',\r\n            }),\r\n            invalidatesTags: ['Heroes']\r\n        })\r\n    })\r\n});\r\n\r\nexport const {useGetHeroesQuery, useCreateHeroMutation, useDeleteHeroMutation} = apiSlice;","import { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport HeroesListItem from \"../heroesListItem/HeroesListItem\";\nimport Spinner from '../spinner/Spinner';\nimport { useGetHeroesQuery, useDeleteHeroMutation } from '../../api/apiSlice';\n\nconst HeroesList = () => {\n\n    const {\n        data: heroes = [],\n        isLoading,\n        isError\n    } = useGetHeroesQuery()\n\n    const [deleteHero] = useDeleteHeroMutation();\n\n    const {selectedFilter} = useSelector(state => state.filters)\n\n    const filteredHeroes = useMemo(() => {\n        \n        const filteredHeroes = heroes.slice();\n\n        if (selectedFilter === 'all') {\n            return filteredHeroes\n        } else {\n            return filteredHeroes.filter(item => item.element === selectedFilter)\n        }\n    }, [heroes, selectedFilter])\n\n    const onDelete = useCallback((id) => {\n        deleteHero(id)\n        // eslint-disable-next-line  \n    }, [])\n\n    if (isLoading) {\n        return <Spinner/>;\n    } else if (isError) {\n        return <h5 className=\"text-center mt-5\">Ошибка загрузки</h5>\n    }\n\n    const renderHeroesList = (arr) => {\n        if (arr.length === 0) {\n            return <h5 className=\"text-center mt-5\">Героев пока нет</h5>\n        }\n\n        return arr.map(({id, ...props}) => {\n            return <HeroesListItem key={id} {...props} onDelete={() => onDelete(id)}/>\n        })\n    }\n\n    const elements = renderHeroesList(filteredHeroes);\n    return (\n        <ul>\n            {elements}\n        </ul>\n    )\n}\n\nexport default HeroesList;","import { createSlice, createAsyncThunk, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nconst filterAdapter = createEntityAdapter();\r\n\r\nconst initialState = filterAdapter.getInitialState({\r\n    filtersLoadingStatus: 'idle',\r\n    selectedFilter: 'all'\r\n})\r\n\r\nexport const fetchFilters = createAsyncThunk(\r\n    'filters/fetchFilters',\r\n    () => {\r\n        const {request} = useHttp();\r\n        return request(\"http://localhost:3001/filters\")\r\n    }\r\n)\r\n\r\nconst filterSlice = createSlice({\r\n    name: 'filters',\r\n    initialState,\r\n    reducers: {\r\n        filterSelect: (state, action) => {state.selectedFilter = action.payload}\r\n    },\r\n    extraReducers: builder => {\r\n        builder\r\n            .addCase(fetchFilters.pending, state => {state.filtersLoadingStatus = 'loading'})\r\n            .addCase(fetchFilters.fulfilled, (state, action) => {\r\n                state.filtersLoadingStatus = 'idle';\r\n                filterAdapter.setAll(state, action.payload);\r\n            })\r\n            .addCase(fetchFilters.rejected, state => {state.filtersLoadingStatus = 'error'})\r\n            .addDefaultCase(() => {})\r\n    }\r\n})\r\n\r\nconst {actions, reducer} = filterSlice;\r\n\r\nexport const {selectAll} = filterAdapter.getSelectors(state => state.filters)\r\n\r\nexport default reducer;\r\n\r\nexport const {\r\n    filterSelect\r\n} = actions;","export const useHttp = () => {\n\n    const request = async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n        try {\n            const response = await fetch(url, {method, body, headers});\n\n            if (!response.ok) {\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            return data;\n        } catch(e) {\n            throw e;\n        }\n    };\n\n    return {request}\n}","import { configureStore } from '@reduxjs/toolkit';\nimport { apiSlice } from '../api/apiSlice';\nimport filters from '../components/heroesFilters/filterSlice';\n\nconst stringMiddleware = () => (next) => (action) => {\n    if (typeof(action) === 'string') {\n        return next({\n            type: action\n        })\n    }\n    return next(action);\n}\n\nconst store = configureStore({\n    reducer: {filters, [apiSlice.reducerPath]: apiSlice.reducer},\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(stringMiddleware, apiSlice.middleware),\n    devTools: process.env.NODE_ENV !== 'production'\n    \n})\n\nexport default store;","import { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { useSelector } from \"react-redux\";\nimport { selectAll } from \"../heroesFilters/filterSlice\";\nimport store from \"../../store\";\nimport { useCreateHeroMutation } from \"../../api/apiSlice\";\n\nconst HeroesAddForm = () => {\n    const [heroName, setHeroName] = useState('');\n    const [heroDescr, setHeroDescr] = useState('');\n    const [heroElem, setHeroElem] = useState('');\n\n    const filters = selectAll(store.getState())\n    const {filtersLoadingStatus} = useSelector(state => state.filters);\n\n    const [createHero, {isLoading, isError}] = useCreateHeroMutation();\n\n    const heroConstructor = (e) => {\n        e.preventDefault();\n        if (!(heroName === '') && !(heroDescr === '')) {\n            const heroData = {\n                id: uuid(),\n                name: heroName,\n                description: heroDescr,\n                element: heroElem\n            }\n\n            createHero(heroData).unwrap();\n\n            setHeroName('');\n            setHeroDescr('');\n            setHeroElem('');\n        }\n    }\n\n    const renderFilters = (filters) => {\n        if (isLoading) {\n            return <option>Загрузка элементов</option>\n        } else if (isError) {\n            return <option>Ошибка загрузки</option>\n        }\n\n        if (filters && filters.length > 0) {\n            return filters.map(({name, value}, i) => {\n                if (name === 'all') return\n                return <option value={name} key={i}>{value}</option>\n            })\n        }\n    }\n\n    return (\n        <form className=\"border p-4 shadow-lg rounded\" onSubmit={heroConstructor}>\n            <div className=\"mb-3\">\n                <label htmlFor=\"name\" className=\"form-label fs-4\">Имя нового героя</label>\n                <input \n                    required\n                    type=\"text\" \n                    name=\"name\" \n                    className=\"form-control\" \n                    id=\"name\" \n                    placeholder=\"Как меня зовут?\"\n                    value={heroName}\n                    onChange={(e) => setHeroName(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"text\" className=\"form-label fs-4\">Описание</label>\n                <textarea\n                    required\n                    name=\"text\" \n                    className=\"form-control\" \n                    id=\"text\" \n                    placeholder=\"Что я умею?\"\n                    style={{\"height\": '130px'}}\n                    value={heroDescr}\n                    onChange={(e) => setHeroDescr(e.target.value)}/>\n            </div>\n\n            <div className=\"mb-3\">\n                <label htmlFor=\"element\" className=\"form-label\">Выбрать элемент героя</label>\n                <select \n                    required\n                    className=\"form-select\" \n                    id=\"element\" \n                    name=\"element\"\n                    value={heroElem}\n                    onChange={(e) => setHeroElem(e.target.value)}>\n                    <option value=\"all\">Я владею элементом...</option>\n                    {renderFilters(filters, filtersLoadingStatus)}\n                </select>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n        </form>\n    )\n}\n\nexport default HeroesAddForm;","import { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Spinner from \"../spinner/Spinner\";\nimport { fetchFilters, filterSelect, selectAll } from \"./filterSlice\";\nimport store from \"../../store\";\n\nconst HeroesFilters = () => {\n    const filters = selectAll(store.getState());\n    const {filtersLoadingStatus} = useSelector(state => state.filters)\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchFilters())\n                // eslint-disable-next-line\n    }, [])\n\n    const itemsRef = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemsRef.current.forEach(elem => elem.classList.remove('active'));\n        itemsRef.current[id].classList.add('active');\n    }\n\n    const renderBtn = (arr) => {\n        if (arr.length === 0) {\n            return <h5>Нет фильтров</h5>\n        }\n        return arr.map(({name, value, className}, i) => {\n            return <button \n                        className={className} \n                        key={name} \n                        ref={el => itemsRef.current[i] = el}\n                        onClick={() => {\n                            focusOnItem(i);\n                            dispatch(filterSelect(name))\n                        }}>{value}</button>\n        })\n    }\n\n    const content = (arr, status) => {\n        switch (status) {\n            case 'loading':\n                return <Spinner/>\n            case 'error':\n                return <h5>Ошибка загрузки</h5>\n            default: return renderBtn(arr)\n        }\n    }\n\n    return (\n        <div className=\"card shadow-lg mt-4\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">Отфильтруйте героев по элементам</p>\n                <div className=\"btn-group\">\n                    {content(filters, filtersLoadingStatus)}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HeroesFilters;","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}